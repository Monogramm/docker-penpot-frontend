# This will load balance your Backend to one or more destinations.
upstream penpot-backend-api {
  # server api1.penpot.{{ DOMAIN }}:3000;
  # server api1.penpot.{{ DOMAIN }}:3001;
  # server api2.penpot.{{ DOMAIN }}:3000;
  # This is a circular reference that allows docker to start as the example project
  server penpot-backend:6060;
}

#upstream penpot-exporter-api {
#  # server exporter1.penpot.{{ DOMAIN }}:3000;
#  # server exporter1.penpot.{{ DOMAIN }}:3001;
#  # server exporter2.penpot.{{ DOMAIN }}:3000;
#  # This is a circular reference that allows docker to start as the example project
#  server penpot-exporter:6061;
#}

server {

  listen 80 default_server;
  listen [::]:80 default_server;

  #listen 443 ssl http2 default_server;
  #listen [::]:443 ssl http2 default_server;

  #ssl_certificate           /etc/nginx/keys/server.crt;
  #ssl_certificate_key       /etc/nginx/keys/server.key;

  #ssl                         on;
  #ssl_session_cache           builtin:1000  shared:SSL:10m;
  #ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
  #ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  #ssl_prefer_server_ciphers   on;

  #server_name penpot.{{ DOMAIN }};
  server_name _;

  client_max_body_size 6M;
  charset utf-8;

  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Scheme $scheme;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  # Frontend
  location / {
    root /usr/share/nginx/html/;

    try_files $uri /index.html;
    gzip on;
    gzip_types text/plain text/css text/javascript application/x-javascript application/javascript application/json application/transit+json;
  }

  location ~* \.(js|css).*$ {
    add_header Cache-Control "max-age=86400" always; # 24 hours
  }

  location ~* \.(html).*$ {
    add_header Cache-Control "no-cache, max-age=0" always;
  }

  # Backend
  location /api {
    # Reverse Proxy to Backend (Avoids XSS concerns)
    proxy_pass http://penpot-backend-api;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;

    # This will allow cookies to work as expected when using your deployment locally
    #proxy_cookie_domain localhost;
  }

  # Exporter
  #location /export {
  #  # Reverse Proxy to Exporter (Avoids XSS concerns)
  #  proxy_pass http://penpot-exporter-api;
  #  proxy_set_header Upgrade $http_upgrade;
  #  proxy_set_header Connection 'upgrade';
  #  proxy_cache_bypass $http_upgrade;
  #}

  location /ws/notifications {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_pass http://penpot-backend-api:6060/ws/notifications;
  }

  location @handle_redirect {
    set $redirect_uri "$upstream_http_location";
    set $redirect_host "$upstream_http_x_host";
    set $redirect_cache_control "$upstream_http_cache_control";

    proxy_buffering off;

    proxy_set_header Host "$redirect_host";
    proxy_hide_header etag;
    proxy_hide_header x-amz-id-2;
    proxy_hide_header x-amz-request-id;
    proxy_hide_header x-amz-meta-server-side-encryption;
    proxy_hide_header x-amz-server-side-encryption;
    proxy_pass $redirect_uri;

    add_header x-internal-redirect "$redirect_uri";
    add_header x-cache-control "$redirect_cache_control";
    add_header cache-control "$redirect_cache_control";
  }

  location /assets {
    proxy_pass http://penpot-backend:6060/assets;
    recursive_error_pages on;
    proxy_intercept_errors on;
    error_page 301 302 307 = @handle_redirect;
  }

  location /internal/assets {
    internal;
    alias /var/www/assets;
    add_header x-internal-redirect "$upstream_http_x_accel_redirect";
  }
}
